---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/reg":
    post:
      summary: Get a token for new user
      tags:
      - New user token
      parameters: []
      responses:
        '201':
          description: Token created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
          application/xml:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - name
              - email
              - password
              - password_confirmation
  "/auth":
    post:
      summary: Get a token
      tags:
      - Registered users token
      parameters: []
      responses:
        '201':
          description: Token created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/posts/{id}/comments":
    post:
      summary: Creates a comment
      tags:
      - Comments
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: comment created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
              required:
              - title
              - content
    get:
      summary: Retrieves a comments
      tags:
      - Comments
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: blog found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  content:
                    type: string
                required:
                - id
                - title
                - content
        '404':
          description: Comment not found
        '406':
          description: unsupported accept header
  "/posts":
    get:
      summary: Retrieves a posts
      tags:
      - Posts
      responses:
        '200':
          description: Post found
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                required:
                - content
        '404':
          description: Post not found
        '406':
          description: unsupported accept header
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: www.localhost:3000/api/v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
